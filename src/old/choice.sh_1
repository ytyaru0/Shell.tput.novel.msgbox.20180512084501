Choice(){
    trap "End; exit 1;" {1,2,3,15}
    End(){ { tput cud $(($#)); tput cnorm; tput sgr0; stty echo 2>/dev/null; } }
    PrintChars(){ printf %${2}s | tr ' ' "$1"; }
    # https://unix.stackexchange.com/questions/88296/get-vertical-cursor-position/183121#183121
    #GetRow(){ IFS=';' read -sdR -p $'\E[6n' ROW COL; echo "${ROW#*[}" }
    #GetCol(){ IFS=';' read -sdR -p $'\E[6n' ROW COL;echo "${COL#*[}" }
    GetRow(){
        { local ROW; local COL; }
        IFS=';' read -sdR -p $'\E[6n' ROW COL
        echo "${ROW#*[}"
    }
    GetCol(){
        { local ROW; local COL; }
        IFS=';' read -sdR -p $'\E[6n' ROW COL
        echo "${COL#*[}"
    }
    tput civis 
    local cursor=0
    while : ; do
        for ((i=0; i<$#; i++)); do
            [ $i -eq $cursor ] && local pre='>'
            [ $i -ne $cursor ] && local pre=' '
            #echo "$pre ${@:((i+1)):1}"
            local msg="$pre ${@:((i+1)):1}"
            echo -n "$msg"
            local diff=$((`tput cols` - `GetCol`))
            local diff=$(($diff - 2))
            echo "`PrintChars ' ' $diff`"
            #echo -n "$pre ${@:((i+1)):1}"`PrintChars 'X' $diff`
        done
        tput cuu $(($#))
        tput cub `tput cols`
        local input=''
        local input2=''

        read -r -s -n1 input
        if [[ $input == $'\x1b' ]]; then
            read -r -s -n2 input2
            input2=`echo -n $input2 | xxd -p`
            case "$input2" in
                '5b41') { [ 0 -lt $cursor ] && { ((cursor--)); continue; } };;
                '5b42') { [ $cursor -lt $(($# - 1)) ] && { ((cursor++)); continue; } };;
            esac
        fi
        [[ '' == $input ]] && return $cursor;
    done
}
Choice "はい" "いいえ"
res=$?
echo $res
